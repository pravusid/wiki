(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{533:function(t,e,s){"use strict";s.r(e);var a=s(28),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"timezone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#timezone"}},[t._v("#")]),t._v(" TimeZone")]),t._v(" "),s("h2",{attrs:{id:"시스템-시간-확인"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#시스템-시간-확인"}},[t._v("#")]),t._v(" 시스템 시간 확인")]),t._v(" "),s("p",[s("code",[t._v("date")])]),t._v(" "),s("h2",{attrs:{id:"타임존-변경-to-kst"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#타임존-변경-to-kst"}},[t._v("#")]),t._v(" 타임존 변경 (to KST)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime")])]),t._v(" "),s("li",[s("code",[t._v("timedatectl set-timezone Asia/Seoul")])])]),t._v(" "),s("blockquote",[s("p",[t._v("reboot 이후 유지됨")])]),t._v(" "),s("h2",{attrs:{id:"타임존-변경-interactive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#타임존-변경-interactive"}},[t._v("#")]),t._v(" 타임존 변경 (interactive)")]),t._v(" "),s("p",[s("code",[t._v("tzselect")])]),t._v(" "),s("p",[t._v("이 경우 실행후 출력되는 다음 형식의 환경변수를 설정해야 함")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("You can "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" this change permanent "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" yourself by appending the line\n        "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TZ")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Asia/Seoul'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" TZ\nto the "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.profile'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" your home directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" log out and log "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" again.\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("[[docker-command]] run env 설정, [[docker-dockerfile]] env 설정에 "),s("code",[t._v("TZ")]),t._v("를 선언하면 실행환경의 타임존을 설정할 수 있음")])])])}),[],!1,null,null,null);e.default=n.exports}}]);