(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{548:function(e,t,s){"use strict";s.r(t);var a=s(27),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"tls-certificate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls-certificate"}},[e._v("#")]),e._v(" TLS Certificate")]),e._v(" "),s("h2",{attrs:{id:"root-ca-certificate-authorities"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#root-ca-certificate-authorities"}},[e._v("#")]),e._v(" Root CA(certificate authorities)")]),e._v(" "),s("p",[e._v("최상위 인증기관")]),e._v(" "),s("h2",{attrs:{id:"intermediate-certificate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intermediate-certificate"}},[e._v("#")]),e._v(" Intermediate certificate")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Chain_of_trust",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Chain_of_trust"),s("OutboundLink")],1)]),e._v(" "),s("blockquote",[s("p",[e._v("Root CA는 이름 그대로 인증서 신뢰 관계의 원점(Trust anchor)이기 때문에 Root CA가 훼손될 경우 신뢰 구조 전체가 무너지게 됩니다.\n따라서 네트워크에서 분리된(Air Gapped 또는 오프라인) 환경에서 안전하게 관리되어야 합니다(이런 부분이 잘 관리되고 있는지 검증받아야 CA가 될 수 있기도 합니다).\n이렇게 Root CA는 중간 CA를 발급(서명)하는 경우에만 제한적으로 사용되고,\nRoot CA를 이용해 발급한 중간 CA만 시스템 상에 온라인으로 두고 Leaf 인증서 발급(서명)에 사용하는 위와 같은 구조가 되는 것입니다.")])]),e._v(" "),s("p",[e._v("from: "),s("a",{attrs:{href:"https://engineering.linecorp.com/ko/blog/best-practices-to-secure-your-ssl-tls/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://engineering.linecorp.com/ko/blog/best-practices-to-secure-your-ssl-tls/"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("Root CA의 경우 브라우저나 기본 KeyStore에 포함되어 있다.\n하지만 Intermediate Certificate는 포함되지 않을 수 있으므로 TLS 제공자의 서버에서 제공해야 한다.")]),e._v(" "),s("h2",{attrs:{id:"domain-certificate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#domain-certificate"}},[e._v("#")]),e._v(" Domain certificate")]),e._v(" "),s("blockquote",[s("p",[e._v("CA로 부터 인증을 받을 수 있다")])]),e._v(" "),s("p",[e._v("예를 들어, Let’s Encrypt 경우 인증을 받으면 다음 파일들이 생성된다")]),e._v(" "),s("ul",[s("li",[e._v("privkey.pem: 도메인 인증서의 개인키")]),e._v(" "),s("li",[e._v("cert.pem: 서명된 도메인 인증서")])]),e._v(" "),s("p",[e._v("CA 정보를 담은 파일도 함께 생성된다")]),e._v(" "),s("ul",[s("li",[e._v("chain.pem: Let’s Encrypt의 중간 인증서(intermediate certificate)")]),e._v(" "),s("li",[e._v("fullchain.pem: "),s("code",[e._v("cert + chain")])])]),e._v(" "),s("h2",{attrs:{id:"self-signed-certificate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#self-signed-certificate"}},[e._v("#")]),e._v(" Self-signed Certificate")]),e._v(" "),s("p",[e._v("OpenSSL을 사용하여 Self Signed Certificate를 생성할 수 있다.")]),e._v(" "),s("h3",{attrs:{id:"root-ca"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#root-ca"}},[e._v("#")]),e._v(" Root CA")]),e._v(" "),s("p",[e._v("Root CA의 개인키를 생성한다: "),s("code",[e._v("openssl genrsa -aes256 -out root-ca.key 2048")])]),e._v(" "),s("p",[e._v("CSR로 Root CA 인증서 생성: "),s("code",[e._v("openssl req -x509 -new -nodes -key root-ca.key -sha256 -days 1825 -out root-ca.crt")])]),e._v(" "),s("p",[e._v("대화형으로 진행됨")]),e._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("Enter pass phrase "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" myCA.key:\n-----\nCountry Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" letter code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nState or Province Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("full name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nLocality Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("eg, city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nOrganization Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("eg, company"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nOrganizational Unit Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("eg, section"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nCommon Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("e.g. server FQDN or YOUR name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nEmail Address\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("h3",{attrs:{id:"ca-signed-cert-for-my-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ca-signed-cert-for-my-server"}},[e._v("#")]),e._v(" CA-signed Cert for My Server")]),e._v(" "),s("p",[e._v("서버 비밀키 생성: "),s("code",[e._v("openssl genrsa -out myserver.key 2048")])]),e._v(" "),s("p",[e._v("CSR 생성(대화형으로 진행됨): "),s("code",[e._v("openssl req -new -key myserver.key -out myserver.csr")])]),e._v(" "),s("p",[e._v("CSR 검증: "),s("code",[e._v("openssl req -in myserver.csr -noout -text")])]),e._v(" "),s("h4",{attrs:{id:"서버-인증서-생성-fdqn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#서버-인증서-생성-fdqn"}},[e._v("#")]),e._v(" 서버 인증서 생성: FDQN")]),e._v(" "),s("p",[e._v("Fully Qualified Domain Name (FDQN): 기존의 고유이름 방식 ("),s("code",[e._v("[hostname].[domain].[tld]")]),e._v(")")]),e._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("openssl x509 -req -in myserver.csr -CA root-ca.crt -CAkey root-ca.key -CAcreateserial "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  -out myserver.crt -days "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1825")]),e._v(" -sha256\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("h4",{attrs:{id:"서버-인증서-생성-san"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#서버-인증서-생성-san"}},[e._v("#")]),e._v(" 서버 인증서 생성: SAN")]),e._v(" "),s("p",[e._v("Subject Alternative Name (SAN): 멀티 도메인 인증을 위한 방식")]),e._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("openssl x509 -req -in myserver.csr -CA root-ca.crt -CAkey root-ca.key -CAcreateserial "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  -extfile "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("printf")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"subjectAltName=DNS:example.com,DNS:example.net,IP:10.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  -out myserver.crt -days "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1825")]),e._v(" -sha256\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("h3",{attrs:{id:"검증"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#검증"}},[e._v("#")]),e._v(" 검증")]),e._v(" "),s("p",[s("code",[e._v("openssl x509 -in myserver.crt -text -noout")])]),e._v(" "),s("h3",{attrs:{id:"통신"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#통신"}},[e._v("#")]),e._v(" 통신")]),e._v(" "),s("p",[e._v("자체서명 인증서 과정에서 다음파일들이 생성된다")]),e._v(" "),s("ul",[s("li",[e._v("root CA 비밀키")]),e._v(" "),s("li",[e._v("root CA 인증서")]),e._v(" "),s("li",[e._v("서버 개인키")]),e._v(" "),s("li",[e._v("서버 인증서")])]),e._v(" "),s("p",[e._v("서버에서는 다음 파일을 가지고 클라이언트 요청을 받는다")]),e._v(" "),s("ul",[s("li",[e._v("서버 개인키")]),e._v(" "),s("li",[e._v("서버 인증서")])]),e._v(" "),s("blockquote",[s("p",[e._v("자체 서명은 사설 root CA 직접 서명이므로 인증서 chain은 필요없다")])]),e._v(" "),s("p",[e._v("클라이언트는 다음 파일을 가지고 자체서명 인증서를 사용하는 서버에 요청한다")]),e._v(" "),s("ul",[s("li",[e._v("root CA 인증서")])]),e._v(" "),s("p",[e._v("또는 클라이언트에서 "),s("code",[e._v("rejectUnauthorized = false")]),e._v("를 사용할 수도 있다 (인증서 검증하지 않음)")]),e._v(" "),s("h2",{attrs:{id:"two-way-ssl-communication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#two-way-ssl-communication"}},[e._v("#")]),e._v(" Two-way SSL communication")]),e._v(" "),s("p",[e._v("클라이언트 인증이라고도 불린다")]),e._v(" "),s("ul",[s("li",[e._v("클라이언트의 인증서와 서버의 인증서를 각각 생성")]),e._v(" "),s("li",[e._v("클라이언트와 서버 각각에서 신뢰할 수 있는 CA에 상호의 인증서를 추가")]),e._v(" "),s("li",[e._v("양쪽 모두가 신뢰할 수 있는 상황이 아니면 연결을 거부")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/SSRMWJ_7.0.1.13/com.ibm.isim.doc/securing/cpt/cpt_ic_security_ssl_scenario.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.ibm.com/support/knowledgecenter/SSRMWJ_7.0.1.13/com.ibm.isim.doc/securing/cpt/cpt_ic_security_ssl_scenario.html"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"인증서-변환"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#인증서-변환"}},[e._v("#")]),e._v(" 인증서 변환")]),e._v(" "),s("h3",{attrs:{id:"pem-을-pkcs-12-으로-변환"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pem-을-pkcs-12-으로-변환"}},[e._v("#")]),e._v(" PEM 을 PKCS#12 으로 변환")]),e._v(" "),s("p",[e._v("cert.pem 파일로 통합")]),e._v(" "),s("p",[s("code",[e._v("cat domain.crt chain1.crt chain2.crt root.crt > cert.pem")])]),e._v(" "),s("p",[e._v(".pfx 파일로 저장")]),e._v(" "),s("p",[s("code",[e._v("openssl pkcs12 -export -name example.com -in cert.pem -inkey private.key -out SecureSign.pfx")])]),e._v(" "),s("h3",{attrs:{id:"pfx-에서-jks-변환"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pfx-에서-jks-변환"}},[e._v("#")]),e._v(" .pfx 에서 .jks 변환")]),e._v(" "),s("p",[s("code",[e._v("keytool -importkeystore -srckeystore SecureSign.pfx -srcstoretype pkcs12 -destkeystore SecureSign.jks -deststoretype jks")])]),e._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("대상 키 저장소 비밀번호 입력: ******\n새 비밀번호 다시 입력: ******\n소스 키 저장소 비밀번호 입력: ****** "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("pfx 생성시 지정한 암호"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("blockquote",[s("p",[s("a",{attrs:{href:"https://www.securesign.kr/guides/SSL-Certificate-Convert-Format",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.securesign.kr/guides/SSL-Certificate-Convert-Format"),s("OutboundLink")],1)])]),e._v(" "),s("h4",{attrs:{id:"jks-오류-cannot-recover-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jks-오류-cannot-recover-key"}},[e._v("#")]),e._v(" jks 오류 (Cannot recover key)")]),e._v(" "),s("blockquote",[s("p",[e._v("Solution: The KeyStore password and The Key password should be the same.")])]),e._v(" "),s("p",[e._v("Changing both passwords using keytool")]),e._v(" "),s("p",[e._v("Change KeyStore password")]),e._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("keytool -storepasswd -new %newpassword% -keystore %YourKeyStore%.jks\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# replace %newpassword% with your actual password, same with YourKeyStore")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("Change Alias key Password")]),e._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("keytool -keypasswd -alias %MyKeyAlias% -new %newpassword% -keystore KeyStore.jks\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Note: supply old passwords for both keystore and alias when asked for them")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("a",{attrs:{href:"https://stackoverflow.com/questions/14606837/cannot-recover-key",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://stackoverflow.com/questions/14606837/cannot-recover-key"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);