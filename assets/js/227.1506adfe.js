(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{599:function(t,r,e){"use strict";e.r(r);var a=e(28),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"spring-interceptor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-interceptor"}},[t._v("#")]),t._v(" Spring Interceptor")]),t._v(" "),e("p",[t._v("DispatcherServlet과 Controller 사이에서 특정한 요청을 처리하기 위해 사용된다.")]),t._v(" "),e("h2",{attrs:{id:"설정"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#설정"}},[t._v("#")]),t._v(" 설정")]),t._v(" "),e("h2",{attrs:{id:"사용"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#사용"}},[t._v("#")]),t._v(" 사용")]),t._v(" "),e("p",[e("code",[t._v("HandlerInterceptor")]),t._v(" 인터페이스나 "),e("code",[t._v("HandlerInterceptorAdapter")]),t._v(" 클래스 구현")])])}),[],!1,null,null,null);r.default=s.exports}}]);