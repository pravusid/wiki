(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{229:function(t,s,a){"use strict";a.r(s);var e=a(17),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sql-joins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-joins"}},[t._v("#")]),t._v(" SQL Joins")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/pravusid/TIL/master/Database/img/sql-joins.jpg",alt:"SQL Joins"}})]),t._v(" "),a("h2",{attrs:{id:"join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[t._v("#")]),t._v(" Join")]),t._v(" "),a("p",[t._v("관계형 데이터베이스는 데이터를 효율적으로 저장하기 위해 정규화 과정을 거친 데이터를 보관하는데,\n필요에 따라 관계있는 데이터를 함께 연결하여 조회하기 위해서 Join을 사용한다.")]),t._v(" "),a("h2",{attrs:{id:"inner-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inner-join"}},[t._v("#")]),t._v(" INNER JOIN")]),t._v(" "),a("h3",{attrs:{id:"equi-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#equi-join"}},[t._v("#")]),t._v(" EQUI JOIN")]),t._v(" "),a("p",[t._v("INNER JOIN의 가장 일반적인 활용방식")]),t._v(" "),a("p",[t._v("여러 테이블에 존재하는 공통 컬럼의 공통 값을 조건으로 결과를 출력함")]),t._v(" "),a("p",[t._v("Explicit")]),t._v(" "),a("blockquote",[a("p",[t._v("SELECT * FROM emp INNER JOIN dept ON emp.deptno = dept.deptno")])]),t._v(" "),a("p",[t._v("Implicit")]),t._v(" "),a("blockquote",[a("p",[t._v("SELECT * FROM emp, dept WHERE emp.deptno = dept.deptno")])]),t._v(" "),a("h4",{attrs:{id:"natural-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#natural-join"}},[t._v("#")]),t._v(" NATURAL JOIN")]),t._v(" "),a("p",[t._v("EQUI JOIN과 거의 유사하지만, 대상 테이블들의 모든 컬럼을 비교하여, 같은 컬럼명끼리 조인을 수행한다.")]),t._v(" "),a("p",[t._v("같은 이름을 가진 컬럼은 한 번만 출력한다.")]),t._v(" "),a("blockquote",[a("p",[t._v("SELECT * FROM emp NATURAL JOIN dept")])]),t._v(" "),a("h2",{attrs:{id:"outer-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outer-join"}},[t._v("#")]),t._v(" (OUTER) JOIN")]),t._v(" "),a("p",[t._v("INNER JOIN은 공통 컬럼의 공통 값을 기반으로 결과를 출력한다.")]),t._v(" "),a("p",[t._v("하지만 JOIN 대상중 특정 테이블의 데이터가 모두 필요한(공통 값이 없더라도) 경우가 있다.\n이때, OUTER JOIN을 사용한다.")]),t._v(" "),a("h3",{attrs:{id:"left-outer-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#left-outer-join"}},[t._v("#")]),t._v(" LEFT (OUTER) JOIN")]),t._v(" "),a("p",[t._v("LEFT OUTER JOIN은 좌측에 위치한 테이블 데이터는 모두 출력한다.")]),t._v(" "),a("blockquote",[a("p",[t._v("SELECT * FROM emp LEFT OUTER JOIN dept ON emp.deptno = dept.deptno;")])]),t._v(" "),a("h3",{attrs:{id:"right-outer-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#right-outer-join"}},[t._v("#")]),t._v(" RIGHT (OUTER) JOIN")]),t._v(" "),a("p",[t._v("LEFT OUTER JOIN은 우측에 위치한 테이블 데이터는 모두 출력한다.")]),t._v(" "),a("blockquote",[a("p",[t._v("SELECT * FROM emp RIGHT OUTER JOIN dept ON emp.deptno = dept.deptno;")])]),t._v(" "),a("h3",{attrs:{id:"full-outer-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#full-outer-join"}},[t._v("#")]),t._v(" FULL (OUTER) JOIN")]),t._v(" "),a("p",[t._v("FULL OUTER JOIN은 대상 테이블 데이터가 모두 필요한 경우 사용한다")]),t._v(" "),a("p",[t._v("MySQL, MariaDB에서는 FULL OUTER JOIN을 지원하지 않으므로 대신 UNION을 사용한다")]),t._v(" "),a("blockquote",[a("p",[t._v("SELECT * FROM emp FULL OUTER JOIN dept ON emp.deptno = dept.deptno;")])]),t._v(" "),a("h2",{attrs:{id:"self-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#self-join"}},[t._v("#")]),t._v(" SELF JOIN")]),t._v(" "),a("p",[t._v("하나의 테이블을 여러번 활용하여 JOIN 결과물을 출력함")]),t._v(" "),a("p",[t._v("Explicit")]),t._v(" "),a("blockquote",[a("p",[t._v("SELECT e.empno, e.ename, e.job, e.hiredate, e.sal, m.empno, m.ename, m.job FROM emp E INNER JOIN emp M ON E.mgr = M.empno")])]),t._v(" "),a("p",[t._v("Implicit")]),t._v(" "),a("blockquote",[a("p",[t._v("SELECT e.empno, e.ename, e.job, e.hiredate, e.sal, m.empno, m.ename, m.job FROM emp E, emp M WHERE E.mgr = M.empno")])]),t._v(" "),a("h2",{attrs:{id:"anti-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#anti-join"}},[t._v("#")]),t._v(" ANTI JOIN")]),t._v(" "),a("p",[t._v("테이블에서 JOIN 대상 테이블과 일치하지 않는 데이터를 출력한다 (NOT IN / NOT EXIST)")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" DeptName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" DeptName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Dept\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Dept\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DeptName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Dept"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DeptName\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h2",{attrs:{id:"semi-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semi-join"}},[t._v("#")]),t._v(" SEMI JOIN")]),t._v(" "),a("p",[t._v("서브쿼리를 사용했을 때 메인쿼리와의 연결을 처리한다 (IN / EXIST)")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" DeptName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" DeptName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Dept\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Dept\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DeptName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Dept"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DeptName\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);