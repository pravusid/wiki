(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{234:function(e,a,s){"use strict";s.r(a);var r=s(0),t=Object(r.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[e._v("#")]),e._v(" Dockerfile")]),e._v(" "),s("p",[e._v("Dockerfile을 이용해서 배포용 이미지 파일을 생성한다")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/engine/reference/builder/"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/develop/develop-images/dockerfile_best-practices/"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"공통사항"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#공통사항"}},[e._v("#")]),e._v(" 공통사항")]),e._v(" "),s("p",[e._v("exec form("),s("code",[e._v('["foo", "bar"]')]),e._v(")은 JSON 배열로 인식되므로, 반드시 double quotes를 사용해야 한다")]),e._v(" "),s("p",[e._v("exec form은 shell form과 달리 명령 쉘을 호출하지 않는다.")]),e._v(" "),s("blockquote",[s("p",[e._v("shell을 동반한 실행을 원하면 shell form을 사용하거나 직접 쉘을 실행해야 한다.\n(예 : "),s("code",[e._v('CMD [ "sh", "-c", "echo $ HOME"]')]),e._v(")")])]),e._v(" "),s("p",[e._v("shell form은 다음 명령의 subcommand로 작동한다")]),e._v(" "),s("ul",[s("li",[e._v("linux: "),s("code",[e._v("/bin/sh -c")])]),e._v(" "),s("li",[e._v("windows: "),s("code",[e._v("cmd /S /C")])])]),e._v(" "),s("h2",{attrs:{id:"dockerfile-기본-명령어"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-기본-명령어"}},[e._v("#")]),e._v(" Dockerfile 기본 명령어")]),e._v(" "),s("h3",{attrs:{id:"from"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[e._v("#")]),e._v(" FROM")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("FROM <image> [AS <name>]\nFROM <image>[:<tag>] [AS <name>]\nFROM <image>[@<digest>] [AS <name>]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("베이스 이미지를 반드시 지정해야 하며 기본값으로 쓸 수 있는 베이스 이미지는 "),s("a",{attrs:{href:"https://hub.docker.com/explore/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker hub"),s("OutboundLink")],1),e._v("에서 확인가능")]),e._v(" "),s("h3",{attrs:{id:"run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[e._v("#")]),e._v(" RUN")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('RUN <command> (shell form, the command is run in a shell, which by default is /bin/sh -c on Linux or cmd /S /C on Windows)\nRUN ["executable", "param1", "param2"] (exec form)\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("RUN 명령은 현재 이미지 위에 새 레이어에서 명령을 실행한 뒤 결과를 커밋한다.\n커밋 된 결과 이미지는 Dockerfile의 다음 단계에 사용된다.")]),e._v(" "),s("p",[e._v("명령을 실행하면서 레이어가 쌓이는 것은 VCS(version control system)와 비슷하다.\n적층 레이어는 커밋 비용은 저렴하고, 이미지 히스토리의 어느 시점에서든 컨테이너를 만들 수 있다는 Docker의 핵심 개념을 따른다.")]),e._v(" "),s("blockquote",[s("p",[s("code",[e._v("SHELL")]),e._v(" 명령을 사용해서 기본 쉘을 변경할 수 있다.")])]),e._v(" "),s("p",[e._v("backslash("),s("code",[e._v("\\")]),e._v(")를 사용하여 여러행에 걸쳐 명령을 정의할 수 있다.")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("RUN /bin/bash -c 'source $HOME/.bashrc; \\\necho $HOME'\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("exec form을 사용해서 다른 쉘에서 명령을 실행할 수 있다")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('RUN ["/bin/bash", "-c", "echo hello"]\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("다음 빌드시, RUN 수행결과의 캐시는 무효화 되지 않으므로, 캐시를 사용하지 않으려면 "),s("code",[e._v("docker build --no-cache")]),e._v(" 플래그를 사용해야 한다.")]),e._v(" "),s("h3",{attrs:{id:"cmd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[e._v("#")]),e._v(" CMD")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('CMD ["executable","param1","param2"] (exec form, this is the preferred form)\nCMD ["param1","param2"] (as default parameters to ENTRYPOINT)\nCMD command param1 param2 (shell form)\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("CMD의 주요 목적은 실행 컨테이너에 대한 기본값을 제공하는 것이다.")]),e._v(" "),s("p",[e._v("CMD에 실행 파일 포함여부는 선택가능하다.\n그러나, 실행 파일이 생략된 경우 ENTRYPOINT 명령을 반드시 지정해야 한다.\n(이 경우 ENTRYPOINT에 파라미터를 전달하는 형식으로 사용하게 됨: case2)")]),e._v(" "),s("blockquote",[s("p",[e._v("사용자가 "),s("code",[e._v("docker run")]),e._v("에 인수를 지정하면 CMD에 지정된 기본값을 무시한다")])]),e._v(" "),s("p",[e._v("exec form으로 명령을 실행할 때는 명령의 전체 경로가 제공되어야 함.")]),e._v(" "),s("blockquote",[s("p",[e._v("예시: "),s("code",[e._v('CMD [ "/ usr / bin / wc", "-help"]')])])]),e._v(" "),s("p",[s("strong",[e._v("빌드할 때는 실행되지 않으며")]),e._v(" 여러 개의 "),s("code",[e._v("CMD")]),e._v("가 존재할 경우 가장 마지막 "),s("code",[e._v("CMD")]),e._v("만 실행 됨.")]),e._v(" "),s("p",[e._v("한꺼번에 여러 개의 프로그램을 실행하고 싶은 경우에는 "),s("code",[e._v("run.sh")]),e._v("파일을 작성하여 데몬으로 실행 함.")]),e._v(" "),s("h3",{attrs:{id:"label"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[e._v("#")]),e._v(" LABEL")]),e._v(" "),s("p",[e._v("이미지의 metadata를 명시")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('LABEL "com.example.vendor"="ACME Incorporated"\nLABEL com.example.label-with-value="foo"\nLABEL version="1.0"\nLABEL description="This text illustrates \\\nthat label-values can span multiple lines."\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h3",{attrs:{id:"expose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expose"}},[e._v("#")]),e._v(" EXPOSE")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("EXPOSE <port> [<port>/<protocol>...]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("도커 컨테이너가 실행되었을 때 요청을 기다리고 있는(Listen) 포트. 여러개의 포트를 지정가능")]),e._v(" "),s("h3",{attrs:{id:"env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[e._v("#")]),e._v(" ENV")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("ENV <key> <value>\nENV <key>=<value> ...\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("컨테이너에서 사용할 환경변수. 컨테이너를 실행할 때 "),s("code",[e._v("-e")]),e._v("옵션을 사용하면 기존 값을 오버라이딩")]),e._v(" "),s("h3",{attrs:{id:"add"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[e._v("#")]),e._v(" ADD")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('ADD [--chown=<user>:<group>] <src>... <dest>\nADD [--chown=<user>:<group>] ["<src>",... "<dest>"] (this form is required for paths containing whitespace)\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("code",[e._v("COPY")]),e._v("명령어와 매우 유사하나 차이점이 있음.\n"),s("code",[e._v("src")]),e._v("에 파일 대신 URL을 입력할 수 있고 "),s("code",[e._v("src")]),e._v("에 압축 파일을 입력하는 경우 자동으로 압축을 해제하면서 복사됨.")]),e._v(" "),s("h3",{attrs:{id:"copy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[e._v("#")]),e._v(" COPY")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('COPY [--chown=<user>:<group>] <src>... <dest>\nCOPY [--chown=<user>:<group>] ["<src>",... "<dest>"]\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("파일이나 디렉토리를 이미지로 복사. 일반적으로 소스를 복사함. "),s("code",[e._v("target")]),e._v("디렉토리가 없으면 자동생성")]),e._v(" "),s("blockquote",[s("p",[e._v("Although ADD and COPY are functionally similar, generally speaking, COPY is preferred.\nThat’s because it’s more transparent than ADD.\n"),s("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"entrypoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint"}},[e._v("#")]),e._v(" ENTRYPOINT")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('ENTRYPOINT ["executable", "param1", "param2"] (exec form, preferred)\nENTRYPOINT command param1 param2 (shell form)\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("code",[e._v("docker run <image>")]),e._v(" 뒤에 따라오는 모든 명령행 인수들은 "),s("code",[e._v("ENTRYPOINT")]),e._v(" exec form에 더해지며, "),s("code",[e._v("CMD")]),e._v("에서 정의한 인수(case2)를 대체한다.")]),e._v(" "),s("p",[s("code",[e._v("docker run --entrypoint")]),e._v(" 플래그를 사용해서 "),s("code",[e._v("ENTRYPOINT")]),e._v(" 명령을 무시할 수 있다.")]),e._v(" "),s("p",[e._v("shell form은 "),s("code",[e._v("CMD")]),e._v(" 혹은 "),s("code",[e._v("run")]),e._v(" 명령행 인수들이 사용되는 것을 방지하지만,\n"),s("code",[e._v("ENTRYPOINT")]),e._v("가 "),s("code",[e._v("/bin/sh -c")]),e._v("의 subcommand로 실행되기 때문에 실행파일은 컨테이너의 PID 1이 아니게 되어 SIGTERM과 같은 Unix signal을 수신하지 못하게 된다.")]),e._v(" "),s("p",[e._v("ENTRYPOINT를 중복선언해도 DockerFile에서 마지막으로 선언한 하나만 적용된다.")]),e._v(" "),s("h4",{attrs:{id:"exec-form-entrypoint-예제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exec-form-entrypoint-예제"}},[e._v("#")]),e._v(" exec form ENTRYPOINT 예제")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('FROM ubuntu\nENTRYPOINT ["top", "-b"]\nCMD ["-c"]\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("위의 dockerfile로 이미지를 생성")]),e._v(" "),s("ul",[s("li",[e._v("실행: "),s("code",[e._v("docker run -it --rm --name test top -H")])]),e._v(" "),s("li",[e._v("확인: "),s("code",[e._v("docker exec")])]),e._v(" "),s("li",[e._v("결과: "),s("code",[e._v("top -b -H")]),e._v(", PID == 1")])]),e._v(" "),s("h3",{attrs:{id:"volume"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volume"}},[e._v("#")]),e._v(" VOLUME")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('VOLUME ["/data"]\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("컨테이너에서 사용할 volume을 지정한다.")]),e._v(" "),s("blockquote",[s("p",[e._v("예시: mysql docker 이미지의 볼륨은 "),s("code",[e._v("VOLUME /var/lib/mysql")]),e._v("이다")])]),e._v(" "),s("p",[e._v("여러 개를 지정하면 컨테이너 실행시 여러개의 볼륨이 컨테이너에 마운트 된다.\n마운트 되는 볼륨의 실제데이터는 호스트의 "),s("code",[e._v("/var/lib/docker/volumes")]),e._v(" 경로에 임의의 이름으로 존재한다.")]),e._v(" "),s("h3",{attrs:{id:"user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#user"}},[e._v("#")]),e._v(" USER")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USER <user>[:<group>] or\nUSER <UID>[:<GID>]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("이미지와 Dockerfile에 지정된 RUN/CMD/ENTRYPOINT 명령을 실행할 때의 유저와 유저그룹을 지정한다")]),e._v(" "),s("blockquote",[s("p",[e._v("user의 primary group이 없으면 root group으로 실행됨")])]),e._v(" "),s("h3",{attrs:{id:"workdir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workdir"}},[e._v("#")]),e._v(" WORKDIR")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("WORKDIR /path/to/workdir\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("각 명령어의 현재 디렉토리는 매 라인마다 초기화되기 때문에 같은 디렉토리에서 계속 작업하기 위해서 "),s("code",[e._v("WORKDIR")]),e._v("을 사용함")]),e._v(" "),s("h3",{attrs:{id:"arg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arg"}},[e._v("#")]),e._v(" ARG")]),e._v(" "),s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("ARG <name>[=<default value>]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("ARG 명령어는 "),s("code",[e._v("--build-arg <varname> = <value>")]),e._v(" 플래그를 사용하여 "),s("code",[e._v("docker build")]),e._v(" 명령을 사용할 때 전달할 변수를 정의한다.")]),e._v(" "),s("p",[e._v("Dockerfile에 정의되지 않은 빌드 인수를 지정하면 경고가 출력되며, 명령행 인수로 받지 않고 기본값을 지정할 수도 있다.")]),e._v(" "),s("blockquote",[s("p",[e._v("빌드 시간 변수 값은 docker history 명령으로 이미지의 모든 사용자에게 표시되므로, secret을 사용하지 않는 것이 좋다")])]),e._v(" "),s("h2",{attrs:{id:"이미지-생성-및-사용"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#이미지-생성-및-사용"}},[e._v("#")]),e._v(" 이미지 생성 및 사용")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("절대경로지정: "),s("code",[e._v("docker build -f /path/to/a/Dockerfile .")])])]),e._v(" "),s("li",[s("p",[e._v("이름:태그 지정: "),s("code",[e._v("--tag")]),e._v("("),s("code",[e._v("-t")]),e._v("):")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("docker build -t shykes/myapp .")])]),e._v(" "),s("li",[s("code",[e._v("docker build -t shykes/myapp:latest -t shykes/myapp:1.0.2 .")])])])])])])}),[],!1,null,null,null);a.default=t.exports}}]);