(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{406:function(s,e,a){"use strict";a.r(e);var r=a(28),t=Object(r.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" Dockerfile")]),s._v(" "),a("p",[s._v("Dockerfile을 이용해서 배포용 이미지 파일을 생성한다")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.docker.com/engine/reference/builder/"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.docker.com/develop/develop-images/dockerfile_best-practices/"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"공통사항"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#공통사항"}},[s._v("#")]),s._v(" 공통사항")]),s._v(" "),a("p",[s._v("exec form("),a("code",[s._v('["foo", "bar"]')]),s._v(")은 JSON 배열로 인식되므로, 반드시 double quotes를 사용해야 한다")]),s._v(" "),a("p",[s._v("exec form은 shell form과 달리 명령 쉘을 호출하지 않는다.")]),s._v(" "),a("blockquote",[a("p",[s._v("shell을 동반한 실행을 원하면 shell form을 사용하거나 직접 쉘을 실행해야 한다.\n(예 : "),a("code",[s._v('CMD [ "sh", "-c", "echo $ HOME"]')]),s._v(")")])]),s._v(" "),a("p",[s._v("shell form은 다음 명령의 subcommand로 작동한다")]),s._v(" "),a("ul",[a("li",[s._v("linux: "),a("code",[s._v("/bin/sh -c")])]),s._v(" "),a("li",[s._v("windows: "),a("code",[s._v("cmd /S /C")])])]),s._v(" "),a("h2",{attrs:{id:"dockerfile-기본-명령어"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-기본-명령어"}},[s._v("#")]),s._v(" Dockerfile 기본 명령어")]),s._v(" "),a("h3",{attrs:{id:"from"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[s._v("#")]),s._v(" FROM")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image> [AS <name>]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image>[:<tag>] [AS <name>]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image>[@<digest>] [AS <name>]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("베이스 이미지를 반드시 지정해야 하며 기본값으로 쓸 수 있는 베이스 이미지는 "),a("a",{attrs:{href:"https://hub.docker.com/explore/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker hub"),a("OutboundLink")],1),s._v("에서 확인가능")]),s._v(" "),a("h3",{attrs:{id:"run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[s._v("#")]),s._v(" RUN")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" <command> (shell form, the command is run in a shell, which by default is /bin/sh -c on Linux or cmd /S /C on Windows)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),s._v("] (exec form)")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("RUN 명령은 현재 이미지 위에 새 레이어에서 명령을 실행한 뒤 결과를 커밋한다.\n커밋 된 결과 이미지는 Dockerfile의 다음 단계에 사용된다.")]),s._v(" "),a("p",[s._v("명령을 실행하면서 레이어가 쌓이는 것은 VCS(version control system)와 비슷하다.\n적층 레이어는 커밋 비용은 저렴하고, 이미지 히스토리의 어느 시점에서든 컨테이너를 만들 수 있다는 Docker의 핵심 개념을 따른다.")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("SHELL")]),s._v(" 명령을 사용해서 기본 쉘을 변경할 수 있다.")])]),s._v(" "),a("p",[s._v("backslash("),a("code",[s._v("\\")]),s._v(")를 사용하여 여러행에 걸쳐 명령을 정의할 수 있다.")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" /bin/bash -c "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'source $HOME/.bashrc; \\\necho $HOME'")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("exec form을 사용해서 다른 쉘에서 명령을 실행할 수 있다")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo hello"')]),s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("다음 빌드시, RUN 수행결과의 캐시는 무효화 되지 않으므로, 캐시를 사용하지 않으려면 "),a("code",[s._v("docker build --no-cache")]),s._v(" 플래그를 사용해야 한다.")]),s._v(" "),a("h3",{attrs:{id:"cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[s._v("#")]),s._v(" CMD")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),s._v("] (exec form, this is the preferred form)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),s._v("] (as default parameters to ENTRYPOINT)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" command param1 param2 (shell form)")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("CMD의 주요 목적은 실행 컨테이너에 대한 기본값을 제공하는 것이다.")]),s._v(" "),a("p",[s._v("CMD에 실행 파일 포함여부는 선택가능하다.\n그러나, 실행 파일이 생략된 경우 ENTRYPOINT 명령을 반드시 지정해야 한다.\n(이 경우 ENTRYPOINT에 파라미터를 전달하는 형식으로 사용하게 됨: case2)")]),s._v(" "),a("blockquote",[a("p",[s._v("사용자가 "),a("code",[s._v("docker run")]),s._v("에 인수를 지정하면 CMD에 지정된 기본값을 무시한다")])]),s._v(" "),a("p",[s._v("exec form으로 명령을 실행할 때는 명령의 전체 경로가 제공되어야 함.")]),s._v(" "),a("blockquote",[a("p",[s._v("예시: "),a("code",[s._v('CMD [ "/ usr / bin / wc", "-help"]')])])]),s._v(" "),a("p",[a("strong",[s._v("빌드할 때는 실행되지 않으며")]),s._v(" 여러 개의 "),a("code",[s._v("CMD")]),s._v("가 존재할 경우 가장 마지막 "),a("code",[s._v("CMD")]),s._v("만 실행 됨.")]),s._v(" "),a("p",[s._v("한꺼번에 여러 개의 프로그램을 실행하고 싶은 경우에는 "),a("code",[s._v("run.sh")]),s._v("파일을 작성하여 데몬으로 실행 함.")]),s._v(" "),a("h3",{attrs:{id:"label"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[s._v("#")]),s._v(" LABEL")]),s._v(" "),a("p",[s._v("이미지의 metadata를 명시")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.example.vendor"')]),s._v("="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ACME Incorporated"')])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" com.example.label-with-value="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" version="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0"')])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" description="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This text illustrates \\\nthat label-values can span multiple lines."')])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"expose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expose"}},[s._v("#")]),s._v(" EXPOSE")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" <port> [<port>/<protocol>...]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("도커 컨테이너가 실행되었을 때 요청을 기다리고 있는(Listen) 포트. 여러개의 포트를 지정가능")]),s._v(" "),a("h3",{attrs:{id:"env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[s._v("#")]),s._v(" ENV")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" <key> <value>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" <key>=<value> ...")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("컨테이너에서 사용할 환경변수. 컨테이너를 실행할 때 "),a("code",[s._v("-e")]),s._v("옵션을 사용하면 기존 값을 오버라이딩")]),s._v(" "),a("h3",{attrs:{id:"add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[s._v("#")]),s._v(" ADD")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" [--chown=<user>:<group>] <src>... <dest>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" [--chown=<user>:<group>] ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<src>"')]),s._v(",... "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<dest>"')]),s._v("] (this form is required for paths containing whitespace)")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("COPY")]),s._v("명령어와 매우 유사하나 차이점이 있음.\n"),a("code",[s._v("src")]),s._v("에 파일 대신 URL을 입력할 수 있고 "),a("code",[s._v("src")]),s._v("에 압축 파일을 입력하는 경우 자동으로 압축을 해제하면서 복사됨.")]),s._v(" "),a("h3",{attrs:{id:"copy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[s._v("#")]),s._v(" COPY")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" [--chown=<user>:<group>] <src>... <dest>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" [--chown=<user>:<group>] ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<src>"')]),s._v(",... "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<dest>"')]),s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("파일이나 디렉토리를 이미지로 복사. 일반적으로 소스를 복사함. "),a("code",[s._v("target")]),s._v("디렉토리가 없으면 자동생성")]),s._v(" "),a("blockquote",[a("p",[s._v("Although ADD and COPY are functionally similar, generally speaking, COPY is preferred.\nThat’s because it’s more transparent than ADD.\n"),a("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"entrypoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint"}},[s._v("#")]),s._v(" ENTRYPOINT")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),s._v("] (exec form, preferred)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" command param1 param2 (shell form)")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("docker run <image>")]),s._v(" 뒤에 따라오는 모든 명령행 인수들은 "),a("code",[s._v("ENTRYPOINT")]),s._v(" exec form에 더해지며, "),a("code",[s._v("CMD")]),s._v("에서 정의한 인수(case2)를 대체한다.")]),s._v(" "),a("p",[a("code",[s._v("docker run --entrypoint")]),s._v(" 플래그를 사용해서 "),a("code",[s._v("ENTRYPOINT")]),s._v(" 명령을 무시할 수 있다.")]),s._v(" "),a("p",[s._v("shell form은 "),a("code",[s._v("CMD")]),s._v(" 혹은 "),a("code",[s._v("run")]),s._v(" 명령행 인수들이 사용되는 것을 방지하지만,\n"),a("code",[s._v("ENTRYPOINT")]),s._v("가 "),a("code",[s._v("/bin/sh -c")]),s._v("의 subcommand로 실행되기 때문에 실행파일은 컨테이너의 PID 1이 아니게 되어 SIGTERM과 같은 Unix signal을 수신하지 못하게 된다.")]),s._v(" "),a("p",[s._v("ENTRYPOINT를 중복선언해도 DockerFile에서 마지막으로 선언한 하나만 적용된다.")]),s._v(" "),a("h4",{attrs:{id:"exec-form-entrypoint-예제"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exec-form-entrypoint-예제"}},[s._v("#")]),s._v(" exec form ENTRYPOINT 예제")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"top"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-b"')]),s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("위의 dockerfile로 이미지를 생성")]),s._v(" "),a("ul",[a("li",[s._v("실행: "),a("code",[s._v("docker run -it --rm --name test top -H")])]),s._v(" "),a("li",[s._v("확인: "),a("code",[s._v("docker exec")])]),s._v(" "),a("li",[s._v("결과: "),a("code",[s._v("top -b -H")]),s._v(", PID == 1")])]),s._v(" "),a("h3",{attrs:{id:"volume"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volume"}},[s._v("#")]),s._v(" VOLUME")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/data"')]),s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("컨테이너에서 사용할 volume을 지정한다.")]),s._v(" "),a("blockquote",[a("p",[s._v("예시: mysql docker 이미지의 볼륨은 "),a("code",[s._v("VOLUME /var/lib/mysql")]),s._v("이다")])]),s._v(" "),a("p",[s._v("여러 개를 지정하면 컨테이너 실행시 여러개의 볼륨이 컨테이너에 마운트 된다.\n마운트 되는 볼륨의 실제데이터는 호스트의 "),a("code",[s._v("/var/lib/docker/volumes")]),s._v(" 경로에 임의의 이름으로 존재한다.")]),s._v(" "),a("h3",{attrs:{id:"user"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user"}},[s._v("#")]),s._v(" USER")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" <user>[:<group>] or")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" <UID>[:<GID>]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("이미지와 Dockerfile에 지정된 RUN/CMD/ENTRYPOINT 명령을 실행할 때의 유저와 유저그룹을 지정한다")]),s._v(" "),a("blockquote",[a("p",[s._v("user의 primary group이 없으면 root group으로 실행됨")])]),s._v(" "),a("h3",{attrs:{id:"workdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workdir"}},[s._v("#")]),s._v(" WORKDIR")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /path/to/workdir")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("각 명령어의 현재 디렉토리는 매 라인마다 초기화되기 때문에 같은 디렉토리에서 계속 작업하기 위해서 "),a("code",[s._v("WORKDIR")]),s._v("을 사용함")]),s._v(" "),a("h3",{attrs:{id:"arg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arg"}},[s._v("#")]),s._v(" ARG")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" <name>[=<default value>]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("ARG 명령어는 "),a("code",[s._v("--build-arg <varname> = <value>")]),s._v(" 플래그를 사용하여 "),a("code",[s._v("docker build")]),s._v(" 명령을 사용할 때 전달할 변수를 정의한다.")]),s._v(" "),a("p",[s._v("Dockerfile에 정의되지 않은 빌드 인수를 지정하면 경고가 출력되며, 명령행 인수로 받지 않고 기본값을 지정할 수도 있다.")]),s._v(" "),a("blockquote",[a("p",[s._v("빌드 시간 변수 값은 docker history 명령으로 이미지의 모든 사용자에게 표시되므로, secret을 사용하지 않는 것이 좋다")])]),s._v(" "),a("h2",{attrs:{id:"이미지-생성-및-사용"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#이미지-생성-및-사용"}},[s._v("#")]),s._v(" 이미지 생성 및 사용")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("절대경로지정: "),a("code",[s._v("docker build -f /path/to/a/Dockerfile .")])])]),s._v(" "),a("li",[a("p",[s._v("이름:태그 지정: "),a("code",[s._v("--tag")]),s._v("("),a("code",[s._v("-t")]),s._v("):")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("docker build -t shykes/myapp .")])]),s._v(" "),a("li",[a("code",[s._v("docker build -t shykes/myapp:latest -t shykes/myapp:1.0.2 .")])])])])])])}),[],!1,null,null,null);e.default=t.exports}}]);