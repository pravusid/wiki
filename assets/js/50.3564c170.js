(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{253:function(o,t,e){"use strict";e.r(t);var s=e(0),r=Object(s.a)({},(function(){var o=this,t=o.$createElement,e=o._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[e("h1",{attrs:{id:"go-modules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#go-modules"}},[o._v("#")]),o._v(" Go Modules")]),o._v(" "),e("p",[o._v("Go Modules는 1.11 버전에서 새로 추가된 의존성 관리도구이다.")]),o._v(" "),e("h2",{attrs:{id:"모듈-생성"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#모듈-생성"}},[o._v("#")]),o._v(" 모듈 생성")]),o._v(" "),e("p",[e("code",[o._v("go mod init [module-repository]")])]),o._v(" "),e("p",[o._v("모듈을 생성하면 "),e("code",[o._v("go.mod")]),o._v(" 파일과 "),e("code",[o._v("go.sum")]),o._v(" 파일이 생성된다")]),o._v(" "),e("p",[e("code",[o._v("go.sum")]),o._v(" 파일의 경우 관리하는 패키지를 검증하기 위한 방법이다.\n패키지의 유효성 검증을 위해 매번 checksum을 얻어오지 않고, 미리 계산된 checksum으로 현재 연결된 패키지의 유효성을 검사한다.")]),o._v(" "),e("h2",{attrs:{id:"모듈에-의존성-추가"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#모듈에-의존성-추가"}},[o._v("#")]),o._v(" 모듈에 의존성 추가")]),o._v(" "),e("p",[o._v("해당 모듈을 인식하는 범위(루트의 서브경로)에서 의존성을 추가한다.\n"),e("code",[o._v("-u")]),o._v(" 커맨드를 사용하여 존재하는 패키지의 경우 버전 업데이트를 할 수 있다.")]),o._v(" "),e("p",[e("code",[o._v("go get [-u] <package-repository>")])]),o._v(" "),e("h2",{attrs:{id:"프록시"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#프록시"}},[o._v("#")]),o._v(" 프록시")]),o._v(" "),e("p",[o._v("Go moudles는 프록시를 지원한다")]),o._v(" "),e("p",[o._v("Go modules에서는 패키지를 찾을때 $GOPATH를 우선 검색하고,\n패키지가 없다면 패키지명에 명시된 원격 repository에서 패키지를 찾는다.")]),o._v(" "),e("p",[o._v("원격 repository를 사용하는 대신 임의의 프록시를 지정하여 패키지를 관리할 수 있다.")]),o._v(" "),e("p",[o._v("프록시를 설정하려면 환경변수에 지정하면 된다: "),e("code",[o._v("export GOPROXY=http://goproxy:8080")])]),o._v(" "),e("p",[o._v("또는 의존성 추가시 프록시를 매번 지정할 수 있다: "),e("code",[o._v("http_proxy=http://goproxy:8080 go get <package-repository>")])])])}),[],!1,null,null,null);t.default=r.exports}}]);